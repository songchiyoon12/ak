[익명클래스를 람다표현식으로]
하나의 추상 메서드를 구현하는 익명클래스는 람다 표현식으로 리팩터링이 가능하다.
익명클래스는 코드를 장황하게 만들며 쉽게 에러를 일으킨다.

Runnable r1=new Runnable() {
            @Override
            public void run() {
                System.out.println("hello");
            }
        };
       
Runnable r2=()-> System.out.println("hello2");
하지만 모든 익명 클래스를 람다표현식으로 바꾸는 것이 가능한건 아니다. 첫째 
익명 클래스에서 사용한 this,super는 람다표현식에서 다른 의미를 가진다. 

Comparable compareTo 자기자신.compare(비교);
Comparator  compare 인자두개

